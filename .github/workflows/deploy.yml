name: Deploy WebStar Server

on:
  push:
    branches: [ main ]
    paths:
      - 'webstar-server-dotnet/**'
      - 'docker-compose.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'webstar-server-dotnet/**'
      - 'docker-compose.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: webstar-server

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.image.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: ./webstar-server-dotnet
        file: ./webstar-server-dotnet/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Output image
      id: image
      run: echo "image=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT

  # DigitalOcean Deployment
  deploy-digitalocean:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to DigitalOcean
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_PRIVATE_KEY }}
        script: |
          # Login to GitHub Container Registry
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
          
          # Pull the latest image
          docker pull ghcr.io/santaslair/webstar-server:latest
          
          # Stop and remove existing container
          docker stop webstar-server || true
          docker rm webstar-server || true
          
          # Run the new container
          docker run -d \
            --name webstar-server \
            --restart unless-stopped \
            -p 5090:5090 \
            -e ASPNETCORE_ENVIRONMENT=Production \
            -e ASPNETCORE_URLS=http://0.0.0.0:5090 \
            ghcr.io/santaslair/webstar-server:latest
          
          # Install nginx if not present
          which nginx || (apt update && apt install -y nginx)
          
          # Remove default nginx site
          rm -f /etc/nginx/sites-enabled/default
          
          # Create our webstar site configuration (without limit_req_zone)
          cat > /etc/nginx/sites-available/webstar << 'EOF'
          server {
              listen 80;
              server_name _;

              location / {
                  proxy_pass http://localhost:5090;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "upgrade";
                  
                  proxy_connect_timeout 60s;
                  proxy_send_timeout 60s;
                  proxy_read_timeout 60s;
              }

              location /health {
                  proxy_pass http://localhost:5090/health;
                  proxy_set_header Host $host;
              }

              location /ws {
                  proxy_pass http://localhost:5090;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "upgrade";
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  
                  proxy_read_timeout 86400;
                  proxy_send_timeout 86400;
                  proxy_connect_timeout 60s;
              }
          }
          EOF
          
          # Enable our site
          ln -sf /etc/nginx/sites-available/webstar /etc/nginx/sites-enabled/webstar
          
          # Test nginx configuration
          nginx -t
          
          # Restart nginx to apply new configuration
          systemctl restart nginx
          systemctl enable nginx
          
          # Clean up old images
          docker image prune -f
